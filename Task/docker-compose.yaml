version: '3'

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.4
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  userService:
    image: akshayghavale/meet5taskuserservice
    ports:
      - "8080:8080"
    environment:
      - KAFKA_HOST=kafka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://userService:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  interactionService:
    image: akshayghavale/meet5taskinteractionservice
    ports:
      - "9090:9090"
    environment:
      - KAFKA_HOST=kafka
    depends_on:
      - userService
    healthcheck:
      test: ["CMD", "curl", "-f", "http://interactionService:9090/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  fraudDetectionService:
    image: akshayghavale/meet5taskfraudservice
    ports:
      - "1010:1010"
    environment:
      - KAFKA_HOST=kafka
    depends_on:
      - interactionService
    healthcheck:
      test: ["CMD", "curl", "-f", "http://fraudDetectionService:1010/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local